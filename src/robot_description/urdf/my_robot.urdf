<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/thien123/ROS2WS/Gazebo/src/robot_description/urdf/my_robot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="thien_robot">
  <!-- Define color -->
  <material name="green">
    <color rgba="0 0.5 0 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 0.5 1"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 0.7"/>
  </material>
  <material name="dark">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <!-- Define links -->
  <link name="base_footprint"/>
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.3 0.19 0.12"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.06"/>
      <material name="green"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.3 0.19 0.12"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.06"/>
      <material name="green"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.06"/>
      <mass value="5.0"/>
      <inertia ixx="0.0435" ixy="0" ixz="0" iyy="0.05254166666666667" iyz="0" izz="0.02104166666666667"/>
    </inertial>
  </link>
  <!--Function
    with xacro-->
  <!-- <xacro:macro name="wheel_link" params="prefix"></xacro:macro> -->
  <link name="left_wheel_link">
    <visual>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.0006770833333333335" ixy="0" ixz="0" iyy="0.0006770833333333335" iyz="0" izz="0.0012500000000000002"/>
    </inertial>
  </link>
  <link name="right_wheel_link">
    <visual>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.0006770833333333335" ixy="0" ixz="0" iyy="0.0006770833333333335" iyz="0" izz="0.0012500000000000002"/>
    </inertial>
  </link>
  <!-- Use the macro to create wheel links -->
  <!-- <xacro:wheel_link prefix="right" />
    <xacro:wheel_link prefix="left" /> -->
  <link name="caster_wheel_link">
    <visual>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="5.0"/>
      <inertia ixx="0.0012500000000000002" ixy="0" ixz="0" iyy="0.0012500000000000002" iyz="0" izz="0.0012500000000000002"/>
    </inertial>
  </link>
  <!-- Define joints -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
  </joint>
  <joint name="base_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.075 -0.1075 0"/>
    <axis xyz="0 1 0"/>
  </joint>
  <joint name="base_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.075 0.1075 0"/>
    <axis xyz="0 1 0"/>
  </joint>
  <joint name="base_caster_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="caster_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.09999999999999999 0 -0.025"/>
    <axis xyz="0 1 1"/>
  </joint>
  <!-- Include lidar -->
  <link name="laser_link">
    <visual>
      <geometry>
        <mesh filename="file:///home/thien123/ROS2WS/robocon_ws/install/robot_description/share/robot_description/mesh/sensors/lds.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.01925"/>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.039" radius="0.077"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.01925"/>
      <material name="grey"/>
    </collision>
  </link>
  <joint name="laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.12"/>
  </joint>
  <gazebo reference="laser_link">
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <sample>720</sample>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>18.0</max>
          <resolution>1</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="laser_controller">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.1 0.05"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.1 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="2.166666666666667e-05" ixy="0" ixz="0" iyy="8.416666666666668e-05" iyz="0" izz="0.00010416666666666669"/>
    </inertial>
  </link>
  <joint name="base_camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin rpy="0 0 0" xyz="0.155 0 0.06"/>
  </joint>
  <gazebo reference="camera_link">
        <material>Gazebo/Red</material>

        <sensor name="camera_sensor" type="camera">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>10.0</update_rate>
            <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
                <frame_name>camera_link</frame_name>
            </plugin>
        </sensor>
        
  </gazebo>
  <!-- Gazebo properties -->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- Lidar plugin -->
  <gazebo reference="laser_link">
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <sample>720</sample>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>18.0</max>
          <resolution>1</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="laser_controller_2">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Camera plugin -->
  <gazebo reference="camera_link">
    <sensor name="camera_sensor" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10.0</update_rate>
      <plugin filename="libgazebo_ros_camera.so" name="camera_sensor">
        <frame_name>camera_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Controller -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive_controller">
      <!-- Update rate in Hz -->
      <update_rate>50</update_rate>
      <!-- wheels -->
      <left_joint>base_left_wheel_joint</left_joint>
      <right_joint>base_right_wheel_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.215</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <!-- limits -->
      <!-- <max_wheel_torque>20</max_wheel_torque>
          <max_wheel_acceleration>1.0</max_wheel_acceleration> -->
      <!-- input -->
      <command_topic>cmd_vel</command_topic>
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo>
</robot>
